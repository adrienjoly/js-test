// generated by build-exercises.js
(function(document) {
  'use strict';
  document.querySelector('#app').exercises = [
    {
      "_info": "generated from ex.1.quizz.template.md",
      "i": "1",
      "isQuizz": true,
      "title": "QCM",
      "questions": [
        {
          "i": 1,
          "id": "qcm1",
          "md": "Comment créer une variable en JavaScript ?\n  \t\t  ",
          "choices": [
            {
              "name": 1,
              "text": "maVariable;"
            },
            {
              "name": 2,
              "text": "var maVariable;"
            },
            {
              "name": 3,
              "text": "x = 0;"
            },
            {
              "name": 4,
              "text": "maVariable = 'bonjour';"
            }
          ]
        },
        {
          "i": 2,
          "id": "qcm2",
          "md": "Quel est le type de cette variable:\n\n```\nvar maVariable = 3.2;\n```\n",
          "choices": [
            {
              "name": 1,
              "text": "string"
            },
            {
              "name": 2,
              "text": "number"
            },
            {
              "name": 3,
              "text": "decimal"
            },
            {
              "name": 4,
              "text": "boolean"
            }
          ]
        },
        {
          "i": 3,
          "id": "qcm3",
          "md": "Quel est le type de cette variable:\n\n```\nvar maVariable = '3.2';\n```\n",
          "choices": [
            {
              "name": 1,
              "text": "string"
            },
            {
              "name": 2,
              "text": "number"
            },
            {
              "name": 3,
              "text": "decimal"
            },
            {
              "name": 4,
              "text": "boolean"
            }
          ]
        },
        {
          "i": 4,
          "id": "qcm4",
          "md": "Que vaut cette expression de comparaison de valeur ?\n\n```\n3.2 === '3.2'\n```\n",
          "choices": [
            {
              "name": 1,
              "text": "true"
            },
            {
              "name": 2,
              "text": "false"
            },
            {
              "name": 3,
              "text": "undefined"
            },
            {
              "name": 4,
              "text": "c'est une affectation"
            }
          ]
        },
        {
          "i": 5,
          "id": "qcm5",
          "md": "En respectant les conventions indiquées en cours, quelle affectation faut-il exécuter pour que `J'ai tout compris !` s'affiche à l'écran ?\n\n```\nalert(message);\n```\n",
          "choices": [
            {
              "name": 1,
              "text": "message = \"J'ai tout compris !\";"
            },
            {
              "name": 2,
              "text": "message = 'J\"ai tout compris !';"
            },
            {
              "name": 3,
              "text": "message = 'J\\'ai tout compris !';"
            },
            {
              "name": 4,
              "text": "message = J'ai tout compris !"
            }
          ]
        },
        {
          "i": 6,
          "id": "qcm6",
          "md": "Quelles sections vont être exécutées, si on exécute le code suivant ?\n\n```\nvar nb = 2;\nif (nb === 2) {\n  // A\n} else if (nb > 1) {\n  // B\n} else {\n  // C\n}\n```\n",
          "choices": [
            {
              "name": 1,
              "text": "seulement A"
            },
            {
              "name": 2,
              "text": "seulement B"
            },
            {
              "name": 3,
              "text": "A et B"
            },
            {
              "name": 4,
              "text": "A, B et C"
            }
          ]
        }
      ]
    },
    {
      "_info": "generated from ex.2.code.template.md",
      "i": "2",
      "isCode": true,
      "title": "Exercices de codage",
      "questions": [
        {
          "i": 1,
          "id": "code1",
          "mdVariants": [
            "Implémenter un chat-bot à partir de l'arbre de décision suivant:\n\n![arbre de décision](data/arbre1.jpg)\n\nComme vu et pratiqué en cours:\n - Les questions posées par l'ordinateur sont représentées par des rectangles, et sont à implémenter à l'aide de la fonction `prompt()`.\n - Les réponses comprises par l'ordinateur sont écrites à côté de chaque branche, et sont à implémenter à l'aide de conditions.\n - Les messages à afficher par l'ordinateur sont représentés par des cercles, et sont à implémenter à l'aide de la fonction `alert()`.\n\nVous serez noté(e) sur:\n - le respect **à la lettre** du texte des questions et des réponses (espaces, accents, et majuscules/minuscules compris).\n - le respect des règles d'indentation et autres conventions vues en cours. (ex: 2 espaces par niveau d'indentation)\n - le bon fonctionnement de votre code, sans erreurs, depuis la console JavaScript de Google Chrome, pour chacun des cas illustrés dans l'arbre de décision.\n",
            "Implémenter un chat-bot à partir de l'arbre de décision suivant:\n\n![arbre de décision](data/arbre2.jpg)\n\nComme vu et pratiqué en cours:\n - Les questions posées par l'ordinateur sont représentées par des rectangles, et sont à implémenter à l'aide de la fonction `prompt()`.\n - Les réponses comprises par l'ordinateur sont écrites à côté de chaque branche, et sont à implémenter à l'aide de conditions.\n - Les messages à afficher par l'ordinateur sont représentés par des cercles, et sont à implémenter à l'aide de la fonction `alert()`.\n\nVous serez noté(e) sur:\n - le respect **à la lettre** du texte des questions et des réponses (espaces, accents, et majuscules/minuscules compris).\n - le respect des règles d'indentation et autres conventions vues en cours. (ex: 2 espaces par niveau d'indentation)\n - le bon fonctionnement de votre code, sans erreurs, depuis la console JavaScript de Google Chrome, pour chacun des cas illustrés dans l'arbre de décision.\n",
            "Implémenter un chat-bot à partir de l'arbre de décision suivant:\n\n![arbre de décision](data/arbre3.jpg)\n\nComme vu et pratiqué en cours:\n - Les questions posées par l'ordinateur sont représentées par des rectangles, et sont à implémenter à l'aide de la fonction `prompt()`.\n - Les réponses comprises par l'ordinateur sont écrites à côté de chaque branche, et sont à implémenter à l'aide de conditions.\n - Les messages à afficher par l'ordinateur sont représentés par des cercles, et sont à implémenter à l'aide de la fonction `alert()`.\n\nVous serez noté(e) sur:\n - le respect **à la lettre** du texte des questions et des réponses (espaces, accents, et majuscules/minuscules compris).\n - le respect des règles d'indentation et autres conventions vues en cours. (ex: 2 espaces par niveau d'indentation)\n - le bon fonctionnement de votre code, sans erreurs, depuis la console JavaScript de Google Chrome, pour chacun des cas illustrés dans l'arbre de décision.\n"
          ]
        }
      ]
    }
  ];
})(document);
