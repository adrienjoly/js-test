// generated by build-exercises.js
(function(document) {
  'use strict';
  document.querySelector('#app').exercises = [
    {
      "_info": "generated from ex.1.quizz.template.md",
      "type": "quizz",
      "questions": [
        {
          "i": 1,
          "id": "qcm1",
          "md": [
            "// TP B",
            "",
            "```html",
            "<form id=\"formulaire\"><input id=\"email\"></form>",
            "```",
            "```js",
            "document.getElementById('formulaire').onsubmit = function(event) {",
            "  event.preventDefault();",
            "  alert('bonjour')",
            "  if (document.getElementById('email').value == 'hollande@elysee.fr') {",
            "    alert('Vérifiez votre adresse');",
            "  }",
            "};",
            "```",
            "",
            "Quel est le rôle de `evt.preventDefault()` ?",
            ""
          ],
          "choices": [
            {
              "name": 1,
              "text": "le formulaire sera crypté"
            },
            {
              "name": 2,
              "text": "le formulaire sera envoyé en AJAX"
            },
            {
              "name": 3,
              "text": "la page ne change pas quand l'utilisateur appuie sur Entrée"
            },
            {
              "name": 4,
              "text": "le champ email vaudra 'hollande@elysee.fr' par défaut"
            }
          ]
        },
        {
          "i": 2,
          "id": "qcm2",
          "md": [
            "Que se passera-t-il si l'utilisateur tape 'hollande@elysee.fr' dans le champ puis presse Entrée ?",
            ""
          ],
          "choices": [
            {
              "name": 1,
              "text": "une requête AJAX va être envoyée"
            },
            {
              "name": 2,
              "text": "la page va se recharger"
            },
            {
              "name": 3,
              "text": "seul le message 'Vérifiez votre adresse' va s'afficher "
            },
            {
              "name": 4,
              "text": "'bonjour' puis 'Vérifiez votre adresse' vont s'afficher"
            }
          ]
        },
        {
          "i": 3,
          "id": "qcm3",
          "md": [
            "Pourquoi faut-il mettre deux signes d'égalité ?",
            ""
          ],
          "choices": [
            {
              "name": 1,
              "text": "le simple egal ne fonctionne qu'entre les nombres"
            },
            {
              "name": 2,
              "text": "le simple egal ne sert qu'à créer des variables"
            },
            {
              "name": 3,
              "text": "le simple egal modifie la valeur de ce qui est à sa gauche"
            },
            {
              "name": 4,
              "text": "le simple egal affecte la valeur de gauche à droite"
            }
          ]
        },
        {
          "i": 4,
          "id": "qcm4",
          "md": [
            "```html",
            "<label for=\"ref1\">",
            "<input type=\"checkbox\" name=\"ref1\">",
            "<input type=\"text\" id=\"ref1\">",
            "```",
            "```js",
            "var ref = document.getElementById('ref1')",
            "```",
            "",
            "À quel élément la variable `ref` fait-elle référence ?",
            ""
          ],
          "choices": [
            {
              "name": 1,
              "text": "le label"
            },
            {
              "name": 2,
              "text": "la case a cocher"
            },
            {
              "name": 3,
              "text": "le champ texte"
            },
            {
              "name": 4,
              "text": "aucun"
            }
          ]
        },
        {
          "i": 5,
          "id": "qcm5",
          "md": [
            "// TP C",
            "",
            "```js",
            "var a = 2;",
            "a + 4;",
            "a = 1;",
            "alert(a + 4);",
            "```",
            "",
            "Quel chiffre va être affiché ?",
            ""
          ],
          "choices": [
            {
              "name": 1,
              "text": "1"
            },
            {
              "name": 2,
              "text": "2"
            },
            {
              "name": 3,
              "text": "5"
            },
            {
              "name": 4,
              "text": "6"
            }
          ]
        },
        {
          "i": 6,
          "id": "qcm6",
          "md": [
            "Comment écrire du texte dans la console ?",
            ""
          ],
          "choices": [
            {
              "name": 1,
              "text": "alert('message')"
            },
            {
              "name": 2,
              "text": "function(message)"
            },
            {
              "name": 3,
              "text": "console.log('bonjour')"
            },
            {
              "name": 4,
              "text": "var message = 'bonjour'"
            }
          ]
        },
        {
          "i": 7,
          "id": "qcm7",
          "md": [
            "```html",
            "<a id=\"link\" href=\"http://google.com\">google</a>",
            "```",
            "```js",
            "link.onclick = function(evt) { evt.preventDefault(); }",
            "```",
            "",
            "En supposant que la variable `link` fasse référence au lien HTML ci-dessus, que se passe-t-il si on clique sur ce lien ?",
            ""
          ],
          "choices": [
            {
              "name": 1,
              "text": "rien"
            },
            {
              "name": 2,
              "text": "on change de page"
            },
            {
              "name": 3,
              "text": "un message est affiché à l'écran"
            },
            {
              "name": 4,
              "text": "le formulaire n'est pas soumis"
            }
          ]
        },
        {
          "i": 8,
          "id": "qcm8",
          "md": [
            "```js",
            "if (0 == 0 && 1 == 3) {",
            "    alert('Un est égal à trois');",
            "}",
            "else if (2 == 2) {",
            "    alert('Deux est égal à lui-même');",
            "}",
            "else {",
            "    alert('Les conditions sont toutes fausses');",
            "}",
            "```",
            "",
            "Quelles alertes sont affichées ?",
            ""
          ],
          "choices": [
            {
              "name": 1,
              "text": "'Un est égal à trois'"
            },
            {
              "name": 2,
              "text": "'Deux est égal à lui-même'"
            },
            {
              "name": 3,
              "text": "'Les conditions sont toutes fausses'"
            },
            {
              "name": 4,
              "text": "les trois"
            }
          ]
        },
        {
          "i": 9,
          "id": "qcm9",
          "md": [
            "// TP D",
            "",
            "```js",
            "for ( var i = 0; i < 4; i++ ) {",
            "  console.log(i);",
            "}",
            "```",
            "",
            "Combien de chiffres vont être affichés ?",
            ""
          ],
          "choices": [
            {
              "name": 1,
              "text": "0"
            },
            {
              "name": 2,
              "text": "1"
            },
            {
              "name": 3,
              "text": "3"
            },
            {
              "name": 4,
              "text": "4"
            }
          ]
        },
        {
          "i": 10,
          "id": "qcm10",
          "md": [
            "// TP E",
            "",
            "```js",
            "function multiplierParDeux (nombre) {",
            "  return nombre * 2;",
            "}",
            "var resultat = multiplierParDeux(multiplierParDeux(3));",
            "```",
            "",
            "Que vaut `resultat` ?",
            ""
          ],
          "choices": [
            {
              "name": 1,
              "text": "2"
            },
            {
              "name": 2,
              "text": "3"
            },
            {
              "name": 3,
              "text": "6"
            },
            {
              "name": 4,
              "text": "12"
            }
          ]
        },
        {
          "i": 11,
          "id": "qcm11",
          "md": [
            "// TP G",
            "",
            "```js",
            "var xhr = new XMLHttpRequest(); ",
            "xhr.open('GET', 'http://jsonplaceholder.typicode.com/users/1');",
            "xhr.onreadystatechange = function() {",
            "  if (xhr.readyState == 4 && (xhr.status == 200 || xhr.status == 0)) {",
            "    // [...]",
            "  }",
            "};",
            "xhr.send(null);",
            "```",
            "",
            "Comment afficher la propriété `name` de l'objet JSON renvoyé en réponse de cette requête AJAX ?",
            ""
          ],
          "choices": [
            {
              "name": 1,
              "text": "alert(xhr.responseText.name)"
            },
            {
              "name": 2,
              "text": "alert(JSON.parse(xhr.responseText).name)"
            },
            {
              "name": 3,
              "text": "alert(JSON.parse('name'))"
            },
            {
              "name": 4,
              "text": "alert(xhr.send('name'))"
            }
          ]
        },
        {
          "i": 12,
          "id": "qcm12",
          "md": [
            "// TP H",
            "",
            "```js",
            "var xhr = new XMLHttpRequest();",
            "xhr.open('POST', 'http://httpbin.org/post');",
            "```",
            "",
            "Comment envoyer un objet JSON contenant une propriété `name` ayant \"steve\" comme valeur:",
            ""
          ],
          "choices": [
            {
              "name": 1,
              "text": "xhr.send(JSON.stringify({ name: 'steve' }));"
            },
            {
              "name": 2,
              "text": "alert(JSON.stringify('name', 'steve'))"
            },
            {
              "name": 3,
              "text": "xhr.responseText = {name: 'steve'};"
            },
            {
              "name": 4,
              "text": "xhr.send('name', 'steve')"
            }
          ]
        },
        {
          "i": 13,
          "id": "qcm13",
          "md": [
            "// TP I",
            "",
            "```html",
            "<a href=\"http://eemi.com\">eemi</a>",
            "```",
            "",
            "Je veux ajouter une image à l'intérieur de l'élément `<a>`, référencé par la variable `lien`:",
            ""
          ],
          "choices": [
            {
              "name": 1,
              "text": "lien.setAttribute('href', 'http://eemi.com/image.jpg');"
            },
            {
              "name": 2,
              "text": "lien.innerHTML = lien.innerHTML + '<img src=\"http://eemi.com/image.jpg\">';"
            },
            {
              "name": 3,
              "text": "lien.innerText += \"http://eemi.com/image.jpg\";"
            },
            {
              "name": 4,
              "text": "lien.image = 'http://eemi.com/image.jpg';"
            }
          ]
        },
        {
          "i": 14,
          "id": "qcm14",
          "md": [
            "// TP K",
            "",
            "Trouvez l'intrus: qu'est-ce qui n'a aucun rapport direct avec un back-end ?",
            ""
          ],
          "choices": [
            {
              "name": 1,
              "text": "une interface d'administration du site"
            },
            {
              "name": 2,
              "text": "une API pour effectuer des opérations CRUD"
            },
            {
              "name": 3,
              "text": "le stockage des données du site"
            },
            {
              "name": 4,
              "text": "Firebase"
            }
          ]
        },
        {
          "i": 15,
          "id": "qcm15",
          "md": [
            "Laquelle de ces applications ne pourrait pas fonctionner sans back-end ?",
            ""
          ],
          "choices": [
            {
              "name": 1,
              "text": "Facebook"
            },
            {
              "name": 2,
              "text": "Angry birds"
            },
            {
              "name": 3,
              "text": "Une application de conversion de devises"
            },
            {
              "name": 4,
              "text": "Votre éditeur de texte"
            }
          ]
        },
        {
          "i": 16,
          "id": "qcm16",
          "md": [
            "Quelle serait la principale limitation d'une app de todo-list sans back-end ?",
            ""
          ],
          "choices": [
            {
              "name": 1,
              "text": "la page se rafraichit à chaque fois qu'on ajoute une tache"
            },
            {
              "name": 2,
              "text": "tous les utilisateurs auraient la même liste de taches"
            },
            {
              "name": 3,
              "text": "toutes les modifications seraient \"oubliées\" quand on rafraichit la page"
            },
            {
              "name": 4,
              "text": "on ne pourrait pas se logger avec son compte EEMI"
            }
          ]
        },
        {
          "i": 17,
          "id": "qcm17",
          "md": [
            "Quelle commande permet d'ajouter un objet à stocker dans firebase ?",
            ""
          ],
          "choices": [
            {
              "name": 1,
              "text": "myDataRef.on('child_added', objet);"
            },
            {
              "name": 2,
              "text": "myDataRef.push(objet);"
            },
            {
              "name": 3,
              "text": "new Firebase('https://flickering-inferno-5369.firebaseIO.com');"
            },
            {
              "name": 4,
              "text": "afaire.innerHTML = afaire.innerHTML + '<p>' + objet + '</p>';"
            }
          ]
        },
        {
          "i": 18,
          "id": "qcm18",
          "md": [
            "```js",
            "myDataRef.on('child_added', function(snapshot) { alert('bonjour') })",
            "```",
            "",
            "En supposant que ma base de données firebase référencée par la variable `myDataRef` contienne 3 objets, combien de fois vais-je voir \"bonjour\" s'afficher ?",
            ""
          ],
          "choices": [
            {
              "name": 1,
              "text": "0"
            },
            {
              "name": 2,
              "text": "1"
            },
            {
              "name": 3,
              "text": "2"
            },
            {
              "name": 4,
              "text": "3"
            }
          ]
        },
        {
          "i": 19,
          "id": "qcm19",
          "md": [
            "// TP L",
            "",
            "Comment supprimer de firebase un objet dont la clé est `key` ?",
            ""
          ],
          "choices": [
            {
              "name": 1,
              "text": "new Firebase('https://flickering-inferno-5369.firebaseIO.com/' + key).remove();"
            },
            {
              "name": 2,
              "text": "Firebase.remove('https://flickering-inferno-5369.firebaseIO.com/' + key);"
            },
            {
              "name": 3,
              "text": "Firebase.remove(key);"
            },
            {
              "name": 4,
              "text": "document.getElementById(key).remove();"
            }
          ]
        },
        {
          "i": 20,
          "id": "qcm20",
          "md": [
            "// TP M",
            "",
            "Quelle commande permet de créer un repository local ?",
            ""
          ],
          "choices": [
            {
              "name": 1,
              "text": "git init"
            },
            {
              "name": 2,
              "text": "mkdir todolist"
            },
            {
              "name": 3,
              "text": "git checkout"
            },
            {
              "name": 4,
              "text": "cd todolist"
            }
          ]
        },
        {
          "i": 21,
          "id": "qcm21",
          "md": [
            "Qu'est-ce que la commande `git clone` ne fait pas ?",
            ""
          ],
          "choices": [
            {
              "name": 1,
              "text": "créer un sous-répertoire"
            },
            {
              "name": 2,
              "text": "créer un repo local"
            },
            {
              "name": 3,
              "text": "télécharger le code depuis un repo distant"
            },
            {
              "name": 4,
              "text": "envoyer les modifs du repo local vers le repo distant"
            }
          ]
        },
        {
          "i": 22,
          "id": "qcm22",
          "md": [
            "Qu'est-ce que la commande `git checkout` ne permet pas de faire ?",
            ""
          ],
          "choices": [
            {
              "name": 1,
              "text": "créer un repo local"
            },
            {
              "name": 2,
              "text": "creer une branche gh-pages"
            },
            {
              "name": 3,
              "text": "revenir sur la branche master"
            },
            {
              "name": 4,
              "text": "revenir à une ancienne version (commit) du code"
            }
          ]
        },
        {
          "i": 23,
          "id": "qcm23",
          "md": [
            "Quelle commande n'est pas nécéssaire pour partager ses modifications de code avec ses collaborateurs ?",
            ""
          ],
          "choices": [
            {
              "name": 1,
              "text": "git add"
            },
            {
              "name": 2,
              "text": "git log"
            },
            {
              "name": 3,
              "text": "git commit"
            },
            {
              "name": 4,
              "text": "git push"
            }
          ]
        }
      ]
    },
    {
      "_info": "generated from ex.2.code.template.md",
      "type": "code"
    }
  ];
})(document);
