// generated by build-exercises.js
(function(document) {
  'use strict';
  if(window.location.href.match(/^http\:\/\/(?!localhost|(.*.ngrok.io)).*$/))
    window.location.href = window.location.href.replace('http:', 'https:');
  var app = document.querySelector('#app');
  app.config = {
    "title": "JavaScript Controle - AJAX (fast-track)",
    "PUBLIC_TEST_MODE": false,
    "DISPLAY_SOLUTIONS_AFTER_SUBMIT": false,
    "redirectToHttps": true,
    "examPack": {
      "publishSolutions": false,
      "publishEvalTests": false
    },
    "backend": {
      "type": "firebase",
      "FIREBASE_CONFIG": {
        "apiKey": "AIzaSyCUIGKvdZ4EdFywDU4a90PupcpBEfvpNPc",
        "databaseURL": "https://js-qcm-ft.firebaseio.com",
        "messagingSenderId": "793078387774"
      }
    },
    "teacherEmail": "adrien.joly@eemi.com",
    "GOOGLE_CLIENT_ID": "247219641427-ifeq88p7rgor9al5ksduds7ug0ba7djr.apps.googleusercontent.com",
    "GOOGLE_CLIENT_DOMAIN": "eemi.com",
    "LOGIN_INVITE": "Se connecter à son compte EEMI:",
    "quizzGrading": {
      "ptsRight": 1,
      "ptsWrong": 0,
      "ptsNull": 0
    },
    "codeGrading": {
      "ptsPerExercise": 10
    }
  };
  app.exercises = [
    {
      "_info": "generated from ex.01.code.template.md",
      "i": 1,
      "isCode": true,
      "title": "Requête AJAX simple",
      "maxScore": 20,
      "questions": [
        {
          "i": 1,
          "id": "code1",
          "variants": [
            {
              "number": 0
            },
            {
              "number": 1
            },
            {
              "number": 2
            }
          ],
          "mdVariants": [
            "\nÉcrire un programme JavaScript permettant:\n\n - d'envoyer une requête HTTP GET à l'URL `https://js-jsonplaceholder.herokuapp.com/photos/0`,\n - puis d'afficher avec `alert()` la réponse complète du serveur à cette requête.\n\nUtiliser la classe `XMLHttpRequest()` pour effectuer cette requête.\n\n\n",
            "\nÉcrire un programme JavaScript permettant:\n\n - d'envoyer une requête HTTP GET à l'URL `https://js-jsonplaceholder.herokuapp.com/photos/1`,\n - puis d'afficher avec `alert()` la réponse complète du serveur à cette requête.\n\nUtiliser la classe `XMLHttpRequest()` pour effectuer cette requête.\n\n\n",
            "\nÉcrire un programme JavaScript permettant:\n\n - d'envoyer une requête HTTP GET à l'URL `https://js-jsonplaceholder.herokuapp.com/photos/2`,\n - puis d'afficher avec `alert()` la réponse complète du serveur à cette requête.\n\nUtiliser la classe `XMLHttpRequest()` pour effectuer cette requête.\n\n\n"
          ]
        },
        {
          "i": 2,
          "id": "code2",
          "variants": [
            {
              "prop": "url"
            },
            {
              "prop": "thumbnailUrl"
            }
          ],
          "mdVariants": [
            "# Album interactif\n\nUn client souhaite un moyen d'accéder rapidement à l'URL d'une photo, à partir du numéro d'identifiant de cette photo.\n\nIl met à disposition une API permettant d'accéder à la base de données de photos. Il suffit d'effectuer une requête HTTP GET à l'URL `https://js-jsonplaceholder.herokuapp.com/photos/<numero>`, où `<numero>` est à remplacer par le numéro d'identifiant dont on souhaite récupérer les données de la photo correspondante. L'API retourne alors une réponse au format JSON, contenant une propriété `url`.\n\nNous allons développer une solution simple consistant en:\n\n - une page HTML contenant un champ permettant de saisir le numéro d'identifiant d'une photo, un bouton pour effectuer la requête, et un deuxième champ qui contiendra l'URL correspondante (récupérée depuis l'API),\n - et un programme JavaScript permettant d'effectuer les requêtes AJAX correspondantes vers leur API, et d'afficher la valeur de la propriété `url` de la photo spécifiée, à chaque fois que l'utilisateur cliquera sur le bouton.\n\nLa page HTML de cette solution est fournie. Voici le code source de son `<body>`:\n\n```html\n<label for=\"numero\">Numéro d'identifiant de la photo:</label>\n<input id=\"numero\" type=\"text\">\n<input id=\"bouton\" type=\"button\" value=\"Chercher\">\n<p>Résultat:</p>\n<input id=\"url\" type=\"text\" readonly>\n```\n\nL'utilisateur doit pouvoir effectuer plusieurs recherches d'affilée, en tapant un autre numéro d'identifiant puis cliquant à nouveau sur le bouton.\n\nÉcrire le programme JavaScript à associer à cette page.\n\nNote: Vous devrez utiliser la classe `XMLHttpRequest()` pour effectuer les requêtes.\n\n\n",
            "# Album interactif\n\nUn client souhaite un moyen d'accéder rapidement à l'URL d'une photo, à partir du numéro d'identifiant de cette photo.\n\nIl met à disposition une API permettant d'accéder à la base de données de photos. Il suffit d'effectuer une requête HTTP GET à l'URL `https://js-jsonplaceholder.herokuapp.com/photos/<numero>`, où `<numero>` est à remplacer par le numéro d'identifiant dont on souhaite récupérer les données de la photo correspondante. L'API retourne alors une réponse au format JSON, contenant une propriété `thumbnailUrl`.\n\nNous allons développer une solution simple consistant en:\n\n - une page HTML contenant un champ permettant de saisir le numéro d'identifiant d'une photo, un bouton pour effectuer la requête, et un deuxième champ qui contiendra l'URL correspondante (récupérée depuis l'API),\n - et un programme JavaScript permettant d'effectuer les requêtes AJAX correspondantes vers leur API, et d'afficher la valeur de la propriété `thumbnailUrl` de la photo spécifiée, à chaque fois que l'utilisateur cliquera sur le bouton.\n\nLa page HTML de cette solution est fournie. Voici le code source de son `<body>`:\n\n```html\n<label for=\"numero\">Numéro d'identifiant de la photo:</label>\n<input id=\"numero\" type=\"text\">\n<input id=\"bouton\" type=\"button\" value=\"Chercher\">\n<p>Résultat:</p>\n<input id=\"thumbnailUrl\" type=\"text\" readonly>\n```\n\nL'utilisateur doit pouvoir effectuer plusieurs recherches d'affilée, en tapant un autre numéro d'identifiant puis cliquant à nouveau sur le bouton.\n\nÉcrire le programme JavaScript à associer à cette page.\n\nNote: Vous devrez utiliser la classe `XMLHttpRequest()` pour effectuer les requêtes.\n\n\n"
          ]
        }
      ]
    }
  ];
})(document);
