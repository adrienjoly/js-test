// generated by build-exercises.js
(function(document) {
  'use strict';
  if(window.location.href.match(/^http\:\/\/(?!localhost).*$/))
    window.location.href = window.location.href.replace('http:', 'https:');
  var app = document.querySelector('#app');
  app.config = {
    "title": "JavaScript QCM",
    "PUBLIC_TEST_MODE": true,
    "DISPLAY_SOLUTIONS_AFTER_SUBMIT": true,
    "redirectToHttps": true,
    "examPack": {
      "publishSolutions": true,
      "publishEvalTests": true
    },
    "backend": {
      "type": "auto-eval"
    },
    "GOOGLE_CLIENT_ID": "247219641427-pq1bbfkkpqvvsgps5t1fh1sjivb61dt4.apps.googleusercontent.com",
    "GOOGLE_CLIENT_DOMAIN": "eemi.com",
    "LOGIN_INVITE": "Se connecter à son compte EEMI:",
    "quizzGrading": {
      "ptsRight": 1,
      "ptsWrong": 0,
      "ptsNull": 0
    },
    "codeGrading": {
      "ptsPerExercise": 3
    }
  };
  app.exercises = [
    {
      "_info": "generated from ex.1.quizz.template.md",
      "i": 1,
      "isQuizz": true,
      "title": "QCM",
      "questions": [
        {
          "i": 1,
          "id": "qcm1",
          "md": "Quel est le nom de l'attribut à utiliser pour donner le nom du fichier .js à charger dans une page HTML:\n\n\n",
          "mdSolution": "\n\n - `href` est utilisé dans les éléments `<link>` et `<a>`\n - `scr` est mal épelé\n - `type` (optionnel) permet d'expliciter le langage employé dans le fichier, si autre que JavaScript\n\nL'attribut `src` est à utiliser dans l'élément `<script>`, et il ne faut pas oublier d'ajouter une balise de fermeture `</script>`.",
          "choices": [
            {
              "name": 1,
              "text": "href"
            },
            {
              "name": 2,
              "text": "src"
            },
            {
              "name": 3,
              "text": "scr"
            },
            {
              "name": 4,
              "text": "type"
            }
          ]
        },
        {
          "i": 2,
          "id": "qcm2",
          "md": "Si je crée une fichier .js qui ne contient que la ligne `alert('bonjour');` et que j'intègre ce fichier à une page HTML, que se passera-t-il ?\n\n\n",
          "mdSolution": "\n\nQuand on intègre un fichier .js à une page HTML (à l'aide de l'élément `<script>`), cela a pour effet d'exécuter les instructions du fichier à chaque (re)chargement de la page dans le navigateur.\n\nPour que l'`alert` soit déclenché par un clic de l'utilisateur, il faut écrire l'instruction à l'intérieur d'une définition de fonction affectée à la propriété `onclick` d'un élément (ex: `<button>`).",
          "choices": [
            {
              "name": 1,
              "text": "rien"
            },
            {
              "name": 2,
              "text": "l'alert ne s'affichera que si on copie-colle le code dans la console"
            },
            {
              "name": 3,
              "text": "l'alert s'affichera quand l'utilisateur cliquera sur un bouton"
            },
            {
              "name": 4,
              "text": "l'alert s'affichera à chaque (re)chargement de la page"
            }
          ]
        },
        {
          "i": 3,
          "id": "qcm3",
          "md": "Soit la page HTML suivante:\n\n```html\n<body>\n  <p id=\"premier-paragraphe\">Bonjour</p>\n  <p id=\"deuxieme-paragraphe\">le monde</p>\n</body>\n```\n\nQuelle instruction JavaScript dois-je exécuter pour accéder au deuxième paragraphe ?\n\n\n",
          "mdSolution": "\n\nL'API du DOM fournit la fonction `getElementById()` pour accéder à un élément en connaissant son identifiant. Il suffit de passer l'identifiant en paramètre.",
          "choices": [
            {
              "name": 1,
              "text": "document.paragraphes[1];"
            },
            {
              "name": 2,
              "text": "document.getElementById(1);"
            },
            {
              "name": 3,
              "text": "document.getElementById('deuxieme-paragraphe');"
            },
            {
              "name": 4,
              "text": "document.deuxieme-paragraphe;"
            }
          ]
        },
        {
          "i": 4,
          "id": "qcm4",
          "md": "Soit la page HTML suivante:\n\n```html\n<body>\n  <form>\n    <input id=\"nom\" value=\"Michel\" />\n    <input id=\"prenom\" value=\"Jean\" />\n  </form>\n</body>\n```\n\nQuelle instruction JavaScript dois-je exécuter pour modifier la valeur du champ `<input>` dont l'identifiant est `prenom` ?\n\n\n",
          "mdSolution": "\n\nSeule la première solution est valide.\n\nComme d'habitude, on commence par accéder au champ `<input>` en spécifiant son `id`, puis on affecte une nouvelle valeur à la propriété `value` de l'objet retourné par `getElementById()`.",
          "choices": [
            {
              "name": 1,
              "text": "document.getElementById('prenom').value = 'nouveau prénom';"
            },
            {
              "name": 2,
              "text": "document.getElementById('prenom', 'nouveau prénom');"
            },
            {
              "name": 3,
              "text": "document.prenom = 'nouveau prénom';"
            },
            {
              "name": 4,
              "text": "document.input = '<input id=\"prenom\" value=\"nouveau prénom\" />'"
            }
          ]
        }
      ],
      "solutions": {
        "qcm1": 2,
        "qcm2": 4,
        "qcm3": 3,
        "qcm4": 1
      }
    },
    {
      "_info": "generated from ex.2.code.template.md",
      "i": 2,
      "isCode": true,
      "title": "Exercices de codage",
      "questions": [
        {
          "i": 5,
          "id": "code5",
          "variants": [
            {}
          ],
          "testVariants": [
            "\n// automatic student evaluation code\n(function evaluateStudentCode(){\n  var res = [];\n  var _button = {\n    onclick: function() {}\n  };\n  var document = {\n    getElementById: function(id) {\n      return id === 'pouet' ? _button : null;\n    }\n  };\n  function alert(p){\n    res.push(p);\n  };\n  _runStudentCode();\n  var tests = [];\n  tests.push(res.length === 0);\n  setTimeout(function(){\n    _button.onclick()\n    tests.push(res.length === 1);\n    setTimeout(function(){\n      _button.onclick()\n      tests.push(res.length === 2);\n      application.remote._send(null, tests);\n      // 1 point per passing test => 3 pts per exercise\n    }, 50)\n  }, 50)\n})();\n"
          ],
          "mdVariants": [
            "Imaginez que vous disposez de la page HTML suivante:\n\n```html\n<bouton id=\"pouet\">cliquez ici !</bouton>\n```\n\nÉcrivez le code JavaScript nécéssaire pour que le message `pouet !` s'affiche dans un `alert` à chaque fois que l'utilisateur cliquera sur le bouton:\n\n"
          ],
          "mdSolutions": [
            "\n\nSolution:\n\n```js\ndocument.getElementById('pouet').onclick = function() {\n  alert('pouet !');\n};\n```\n"
          ]
        }
      ]
    }
  ];
})(document);
