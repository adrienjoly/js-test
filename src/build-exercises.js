// This scripts generates ./public/scripts/exercices.js based on ./*.md files

var fs = require('fs');
var QuizzConverter = require('./QuizzConverter');
var QuizzEnumerator = require('./QuizzEnumerator');

var PATH_SOURCE = './exam-data/';
var OUTPUT_FILE = './public/scripts/exam-data.js';

var CONFIG_FILE = '../' + PATH_SOURCE + 'exam-config.js';

function renderExercisesFile(exercises) {
  var config = require(CONFIG_FILE);
  return [
    '// generated by build-exercises.js',
    '(function(document) {',
    '  \'use strict\';',
    '  var app = document.querySelector(\'#app\');',
    '  app.config = '
      + JSON.stringify(config, null, 2).replace(/\n/g, '\n  ') + ';',
    '  app.exercises = '
      + JSON.stringify(exercises, null, 2).replace(/\n/g, '\n  ') + ';',
    '})(document);',
    ''
  ].join('\n');
}

// converters

var converters = {

  code: function(exerciseData, exNumber) {
    var rendered = QuizzConverter.renderCodeExercise(exerciseData, exNumber);
    // generate solution file, for evaluation of students' answers using QuizzEvaluator.js
    var solFile = PATH_SOURCE + 'ex.' + exNumber + '.code.tests.json';
    fs.writeFileSync(solFile, JSON.stringify(rendered.evalTests, null, 2));
    // generate data for exercise pack
    return {
      _info: exerciseData._info,
      i: exNumber,
      isCode: true,
      title: 'Exercices de codage',
      questions: rendered.questions,
    };
  },

  quizz: function(exerciseData, exNumber) {
    var rendered = QuizzConverter.renderQuizzExercise(exerciseData, exNumber);
    // generate solution file, for evaluation of students' answers using QuizzEvaluator.js
    var solFile = PATH_SOURCE + 'ex.' + exNumber + '.quizz.solutions.json';
    fs.writeFileSync(solFile, JSON.stringify(rendered.solutions, null, 2));
    // generate data for exercise pack
    return {
      _info: exerciseData._info,
      i: exNumber,
      isQuizz: true,
      title: 'QCM',
      questions: rendered.questions,
      solutions: rendered.solutions
    };
  },
};

// actual script

var exercises = QuizzEnumerator.parseAllFrom(PATH_SOURCE).map(function(exData) {
  return converters[exData._type](exData, exData.i);
});

// the exercisePack file will be loaded by index.html, then processed by app.js for rendering
// exercises and student-id-based variants
var exercisePack = renderExercisesFile(exercises);
fs.writeFileSync(OUTPUT_FILE, exercisePack);
