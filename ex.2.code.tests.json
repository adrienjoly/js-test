[
  {
    "i": 1,
    "id": "code1",
    "variants": [
      {
        "n": 1,
        "prompts": "gris,foncé",
        "expected": "ah bon?"
      },
      {
        "n": 2,
        "prompts": "gris,foncé",
        "expected": "c'est bien!"
      },
      {
        "n": 3,
        "prompts": "bleu,foncé",
        "expected": "OK"
      }
    ],
    "testVariants": [
      "\n\n(function evaluateStudentCode(){\n  var done = application.remote._send; // to call upon code evaluation\n  // student's variant -> test inputs and expected outputs\n  var variant = {\n    prompts: 'gris,foncé'.split(','),\n    expected: 'ah bon?',\n  };\n  // exercise requirements\n  var req = 'si l\\'utilisateur tape ' + variant.prompts.join(' puis ')\n    + ', alert devrait afficher \"' + variant.expected + '\"';\n  application.remote._setTimeoutMessage(req\n    + ', mais alert n\\'a pas été appelé...');\n  // test environment\n  var prompts = variant.prompts.slice(); // clone the array\n  function prompt() {\n    return prompts.shift();\n  }\n  function alert(message) {\n    if (message !== variant.expected) {\n      done(req + ' au lieu de \"' + message + '\"', 0.5);\n      // give a half point to the student, because her code runs\n    } else {\n      done(null, 1); // passed test => give the point to the student\n    }\n  };\n  var console = { log: function(){} }; // tolerate calls to console.log()\n  // run the test\n  _runStudentCode(); // student call should call prompt() and alert()\n})();\n",
      "\n\n(function evaluateStudentCode(){\n  var done = application.remote._send; // to call upon code evaluation\n  // student's variant -> test inputs and expected outputs\n  var variant = {\n    prompts: 'gris,foncé'.split(','),\n    expected: 'c&#39;est bien!',\n  };\n  // exercise requirements\n  var req = 'si l\\'utilisateur tape ' + variant.prompts.join(' puis ')\n    + ', alert devrait afficher \"' + variant.expected + '\"';\n  application.remote._setTimeoutMessage(req\n    + ', mais alert n\\'a pas été appelé...');\n  // test environment\n  var prompts = variant.prompts.slice(); // clone the array\n  function prompt() {\n    return prompts.shift();\n  }\n  function alert(message) {\n    if (message !== variant.expected) {\n      done(req + ' au lieu de \"' + message + '\"', 0.5);\n      // give a half point to the student, because her code runs\n    } else {\n      done(null, 1); // passed test => give the point to the student\n    }\n  };\n  var console = { log: function(){} }; // tolerate calls to console.log()\n  // run the test\n  _runStudentCode(); // student call should call prompt() and alert()\n})();\n",
      "\n\n(function evaluateStudentCode(){\n  var done = application.remote._send; // to call upon code evaluation\n  // student's variant -> test inputs and expected outputs\n  var variant = {\n    prompts: 'bleu,foncé'.split(','),\n    expected: 'OK',\n  };\n  // exercise requirements\n  var req = 'si l\\'utilisateur tape ' + variant.prompts.join(' puis ')\n    + ', alert devrait afficher \"' + variant.expected + '\"';\n  application.remote._setTimeoutMessage(req\n    + ', mais alert n\\'a pas été appelé...');\n  // test environment\n  var prompts = variant.prompts.slice(); // clone the array\n  function prompt() {\n    return prompts.shift();\n  }\n  function alert(message) {\n    if (message !== variant.expected) {\n      done(req + ' au lieu de \"' + message + '\"', 0.5);\n      // give a half point to the student, because her code runs\n    } else {\n      done(null, 1); // passed test => give the point to the student\n    }\n  };\n  var console = { log: function(){} }; // tolerate calls to console.log()\n  // run the test\n  _runStudentCode(); // student call should call prompt() and alert()\n})();\n"
    ]
  }
]